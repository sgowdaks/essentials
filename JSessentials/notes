context => this (global, local)
closure => function that does not die after execution, it still holds value and so that we can use it later

function help(){
    var k = "Shivani"
    return function helpe(){
        console.log("Hello " +k)
    }
    
}

var value = help()
value()


fettch example:
fetch('https://jsonplaceholder.typicode.com/comments/1')
    .then((response) => response.json())
    .then((data) => console.log(data))

fetch('https://jsonplaceholder.typicode.com/comments', {
        method: 'POST',
        body: JSON.stringify({
            name: 'Comment 105',
            email: 'dylansemail310@gmail.com',
            body: 'Dopes comment in the game',
            postId: 1
        })
    })
    .then((response) => response.json())
    .then((data) => console.log(data))
